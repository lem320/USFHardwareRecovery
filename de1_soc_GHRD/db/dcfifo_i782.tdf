--dcfifo_mixed_widths ADD_RAM_OUTPUT_REGISTER="OFF" CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 CLOCKS_ARE_SYNCHRONIZED="FALSE" DEVICE_FAMILY="Cyclone V" IGNORE_CARRY_BUFFERS="OFF" LPM_NUMWORDS=256 LPM_SHOWAHEAD="OFF" LPM_WIDTH=32 LPM_WIDTH_R=32 LPM_WIDTHU=8 LPM_WIDTHU_R=8 OVERFLOW_CHECKING="ON" RDSYNC_DELAYPIPE=4 READ_ACLR_SYNCH="ON" UNDERFLOW_CHECKING="ON" USE_EAB="OFF" WRITE_ACLR_SYNCH="ON" WRSYNC_DELAYPIPE=4 aclr data q rdclk rdempty rdfull rdreq rdusedw wrclk wrempty wrfull wrreq wrusedw ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES="CARE" CYCLONEII_M4K_COMPATIBILITY="ON" INTENDED_DEVICE_FAMILY="CYCLONEV" LOW_POWER_MODE="AUTO" lpm_hint="DISABLE_DCFIFO_EMBEDDED_TIMING_CONSTRAINT" ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
--VERSION_BEGIN 21.1 cbx_a_gray2bin 2021:10:21:11:03:22:SJ cbx_a_graycounter 2021:10:21:11:03:22:SJ cbx_altdpram 2021:10:21:11:03:22:SJ cbx_altera_counter 2021:10:21:11:03:22:SJ cbx_altera_gray_counter 2021:10:21:11:03:22:SJ cbx_altera_syncram 2021:10:21:11:03:22:SJ cbx_altera_syncram_nd_impl 2021:10:21:11:03:22:SJ cbx_altsyncram 2021:10:21:11:03:22:SJ cbx_cycloneii 2021:10:21:11:03:22:SJ cbx_dcfifo 2021:10:21:11:03:22:SJ cbx_fifo_common 2021:10:21:11:03:22:SJ cbx_lpm_add_sub 2021:10:21:11:03:22:SJ cbx_lpm_compare 2021:10:21:11:03:21:SJ cbx_lpm_counter 2021:10:21:11:03:21:SJ cbx_lpm_decode 2021:10:21:11:03:21:SJ cbx_lpm_mux 2021:10:21:11:03:22:SJ cbx_mgl 2021:10:21:11:03:46:SJ cbx_nadder 2021:10:21:11:03:22:SJ cbx_scfifo 2021:10:21:11:03:22:SJ cbx_stratix 2021:10:21:11:03:22:SJ cbx_stratixii 2021:10:21:11:03:22:SJ cbx_stratixiii 2021:10:21:11:03:22:SJ cbx_stratixv 2021:10:21:11:03:22:SJ cbx_util_mgl 2021:10:21:11:03:22:SJ  VERSION_END


-- Copyright (C) 2021  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.


FUNCTION a_fefifo_gtc (aclr, clock, rreq, usedw_in[7..0])
RETURNS ( empty, full);
FUNCTION a_fefifo_ltc (aclr, clock, usedw_in[7..0], wreq)
RETURNS ( empty, full);
FUNCTION a_gray2bin_f9b (gray[7..0])
RETURNS ( bin[7..0]);
FUNCTION a_graycounter_eu6 (aclr, clock, cnt_en)
RETURNS ( q[7..0]);
FUNCTION a_graycounter_j56 (aclr, clock, cnt_en)
RETURNS ( q[7..0]);
FUNCTION altdpram (aclr, byteena[WIDTH_BYTEENA-1..0], data[WIDTH-1..0], inclock, inclocken, outclock, outclocken, rdaddress[WIDTHAD-1..0], rdaddressstall, rden, sclr, wraddress[WIDTHAD-1..0], wraddressstall, wren)
WITH ( ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES, ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_POWER_UP_CONDITIONS, ACF_DISABLE_MLAB_RAM_USE, ACF_IMPLEMENT_MLAB_IN_16_BIT_DEEP_MODE, BYTE_SIZE, INDATA_ACLR, INDATA_REG, LPM_FILE, lpm_hint, MAXIMUM_DEPTH, NUMWORDS, OUTDATA_ACLR, OUTDATA_REG, OUTDATA_SCLR, RAM_BLOCK_TYPE, RDADDRESS_ACLR, RDADDRESS_REG, RDCONTROL_ACLR, RDCONTROL_REG, READ_DURING_WRITE_MODE_MIXED_PORTS, USE_EAB, WIDTH, WIDTH_BYTEENA = 1, WIDTHAD, WRADDRESS_ACLR, WRADDRESS_REG, WRCONTROL_ACLR, WRCONTROL_REG)
RETURNS ( q[WIDTH-1..0]);
FUNCTION dffpipe_fd9 (clock, clrn, d[7..0])
RETURNS ( q[7..0]);
FUNCTION alt_synch_pipe_oc8 (clock, clrn, d[7..0])
RETURNS ( q[7..0]);
FUNCTION dffpipe_3dc (clock, clrn, d[0..0])
RETURNS ( q[0..0]);
FUNCTION cntr_12b (aclr, clock, cnt_en)
RETURNS ( q[7..0]);

--synthesis_resources = altdpram 1 lut 54 reg 177 
OPTIONS ALTERA_INTERNAL_OPTION = "AUTO_SHIFT_REGISTER_RECOGNITION=OFF;suppress_da_rule_internal=R105;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;{-to rdptrrg} PRESERVE_REGISTER=ON;-name CUT ON -from *fiforam|cells* -to *fiforam|xq*;-name SDC_STATEMENT ""set_false_path -from **fiforam|cells** -to **fiforam|xq** "";-name CUT ON -from write_delay_cycle -to dffpipe_rs_dgwp|dffpipe_id9:dffpipe12|dffe13a;-name SDC_STATEMENT ""set_false_path -from *write_delay_cycle* -to *dffpipe_rs_dgwp|dffpipe_id9:dffpipe12|dffe13a* """;

SUBDESIGN dcfifo_i782
( 
	aclr	:	input;
	data[31..0]	:	input;
	q[31..0]	:	output;
	rdclk	:	input;
	rdempty	:	output;
	rdfull	:	output;
	rdreq	:	input;
	rdusedw[7..0]	:	output;
	wrclk	:	input;
	wrempty	:	output;
	wrfull	:	output;
	wrreq	:	input;
	wrusedw[7..0]	:	output;
) 
VARIABLE 
	read_state : a_fefifo_gtc;
	write_state : a_fefifo_ltc;
	gray2bin_rs_nbwp : a_gray2bin_f9b;
	gray2bin_ws_nbrp : a_gray2bin_f9b;
	rdptr_g : a_graycounter_eu6;
	wrptr_g : a_graycounter_j56;
	fiforam : altdpram
		WITH (
			ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES = "CARE",
			lpm_hint = "DISABLE_DCFIFO_EMBEDDED_TIMING_CONSTRAINT",
			OUTDATA_REG = "OUTCLOCK",
			RDCONTROL_ACLR = "OFF",
			RDCONTROL_REG = "UNREGISTERED",
			USE_EAB = "OFF",
			WIDTH = 32,
			WIDTHAD = 8
		);
	rdptrrg[7..0] : dffe;
	write_delay_cycle[7..0] : dffe;
	dffpipe_rdbuw : dffpipe_fd9;
	dffpipe_rdusedw : dffpipe_fd9;
	dffpipe_rs_dbwp : dffpipe_fd9;
	dffpipe_rs_dgwp : alt_synch_pipe_oc8;
	dffpipe_wr_dbuw : dffpipe_fd9;
	dffpipe_wrusedw : dffpipe_fd9;
	dffpipe_ws_dgrp : alt_synch_pipe_oc8;
	dffpipe_ws_nbrp : dffpipe_fd9;
	rdaclr : dffpipe_3dc;
	wraclr : dffpipe_3dc;
	lpm_add_sub_rd_udwn_dataa[7..0]	:	WIRE;
	lpm_add_sub_rd_udwn_datab[7..0]	:	WIRE;
	lpm_add_sub_rd_udwn_result[7..0]	:	WIRE;
	lpm_add_sub_wr_udwn_dataa[7..0]	:	WIRE;
	lpm_add_sub_wr_udwn_datab[7..0]	:	WIRE;
	lpm_add_sub_wr_udwn_result[7..0]	:	WIRE;
	rdptr_b : cntr_12b;
	wrptr_b : cntr_12b;
	rd_dbuw[7..0]	: WIRE;
	rd_udwn[7..0]	: WIRE;
	rs_dbwp[7..0]	: WIRE;
	rs_dgwp[7..0]	: WIRE;
	rs_nbwp[7..0]	: WIRE;
	tmp_aclr_r	: WIRE;
	tmp_aclr_w	: WIRE;
	tmp_data[7..0]	: WIRE;
	valid_rreq	: WIRE;
	valid_wreq	: WIRE;
	wr_dbuw[7..0]	: WIRE;
	wr_udwn[7..0]	: WIRE;
	ws_dbrp[7..0]	: WIRE;
	ws_dgrp[7..0]	: WIRE;
	ws_nbrp[7..0]	: WIRE;

BEGIN 
	read_state.aclr = (! rdaclr.q[]);
	read_state.clock = rdclk;
	read_state.rreq = rdreq;
	read_state.usedw_in[] = rd_dbuw[];
	write_state.aclr = (! wraclr.q[]);
	write_state.clock = wrclk;
	write_state.usedw_in[] = wr_dbuw[];
	write_state.wreq = wrreq;
	gray2bin_rs_nbwp.gray[] = rs_dgwp[];
	gray2bin_ws_nbrp.gray[] = ws_dgrp[];
	rdptr_g.aclr = (! rdaclr.q[]);
	rdptr_g.clock = rdclk;
	rdptr_g.cnt_en = valid_rreq;
	wrptr_g.aclr = (! wraclr.q[]);
	wrptr_g.clock = wrclk;
	wrptr_g.cnt_en = valid_wreq;
	fiforam.aclr = (! rdaclr.q[]);
	fiforam.data[] = data[];
	fiforam.inclock = wrclk;
	fiforam.outclock = rdclk;
	fiforam.outclocken = valid_rreq;
	fiforam.rdaddress[] = rdptr_g.q[];
	fiforam.wraddress[] = wrptr_g.q[];
	fiforam.wren = valid_wreq;
	rdptrrg[].clk = rdclk;
	rdptrrg[].clrn = rdaclr.q[];
	rdptrrg[].d = rdptr_g.q[];
	rdptrrg[].ena = valid_rreq;
	write_delay_cycle[].clk = wrclk;
	write_delay_cycle[].clrn = wraclr.q[];
	write_delay_cycle[].d = wrptr_g.q[];
	dffpipe_rdbuw.clock = rdclk;
	dffpipe_rdbuw.clrn = tmp_aclr_r;
	dffpipe_rdbuw.d[] = rd_udwn[];
	dffpipe_rdusedw.clock = rdclk;
	dffpipe_rdusedw.clrn = tmp_aclr_r;
	dffpipe_rdusedw.d[] = rd_udwn[];
	dffpipe_rs_dbwp.clock = rdclk;
	dffpipe_rs_dbwp.clrn = tmp_aclr_r;
	dffpipe_rs_dbwp.d[] = rs_nbwp[];
	dffpipe_rs_dgwp.clock = rdclk;
	dffpipe_rs_dgwp.clrn = tmp_aclr_r;
	dffpipe_rs_dgwp.d[] = write_delay_cycle[].q;
	dffpipe_wr_dbuw.clock = wrclk;
	dffpipe_wr_dbuw.clrn = tmp_aclr_w;
	dffpipe_wr_dbuw.d[] = wr_udwn[];
	dffpipe_wrusedw.clock = wrclk;
	dffpipe_wrusedw.clrn = tmp_aclr_w;
	dffpipe_wrusedw.d[] = wr_udwn[];
	dffpipe_ws_dgrp.clock = wrclk;
	dffpipe_ws_dgrp.clrn = tmp_aclr_w;
	dffpipe_ws_dgrp.d[] = tmp_data[];
	dffpipe_ws_nbrp.clock = wrclk;
	dffpipe_ws_nbrp.clrn = tmp_aclr_w;
	dffpipe_ws_nbrp.d[] = ws_nbrp[];
	rdaclr.clock = rdclk;
	rdaclr.clrn = (! aclr);
	rdaclr.d[] = B"1";
	wraclr.clock = wrclk;
	wraclr.clrn = (! aclr);
	wraclr.d[] = B"1";
	lpm_add_sub_rd_udwn_result[] = lpm_add_sub_rd_udwn_dataa[] - lpm_add_sub_rd_udwn_datab[];
	lpm_add_sub_rd_udwn_dataa[] = rs_dbwp[];
	lpm_add_sub_rd_udwn_datab[] = rdptr_b.q[];
	lpm_add_sub_wr_udwn_result[] = lpm_add_sub_wr_udwn_dataa[] - lpm_add_sub_wr_udwn_datab[];
	lpm_add_sub_wr_udwn_dataa[] = wrptr_b.q[];
	lpm_add_sub_wr_udwn_datab[] = ws_dbrp[];
	rdptr_b.aclr = (! rdaclr.q[]);
	rdptr_b.clock = rdclk;
	rdptr_b.cnt_en = valid_rreq;
	wrptr_b.aclr = (! wraclr.q[]);
	wrptr_b.clock = wrclk;
	wrptr_b.cnt_en = valid_wreq;
	q[] = fiforam.q[];
	rd_dbuw[] = dffpipe_rdbuw.q[];
	rd_udwn[] = lpm_add_sub_rd_udwn_result[];
	rdempty = read_state.empty;
	rdfull = read_state.full;
	rdusedw[] = dffpipe_rdusedw.q[];
	rs_dbwp[] = dffpipe_rs_dbwp.q[];
	rs_dgwp[] = dffpipe_rs_dgwp.q[];
	rs_nbwp[] = gray2bin_rs_nbwp.bin[];
	tmp_aclr_r = rdaclr.q[];
	tmp_aclr_w = wraclr.q[];
	tmp_data[] = rdptrrg[].q;
	valid_rreq = (rdreq & (! (read_state.empty # (! rdaclr.q[]))));
	valid_wreq = (wrreq & (! (write_state.full # (! wraclr.q[]))));
	wr_dbuw[] = dffpipe_wr_dbuw.q[];
	wr_udwn[] = lpm_add_sub_wr_udwn_result[];
	wrempty = write_state.empty;
	wrfull = (write_state.full # (! wraclr.q[]));
	wrusedw[] = dffpipe_wrusedw.q[];
	ws_dbrp[] = dffpipe_ws_nbrp.q[];
	ws_dgrp[] = dffpipe_ws_dgrp.q[];
	ws_nbrp[] = gray2bin_ws_nbrp.bin[];
END;
--VALID FILE
